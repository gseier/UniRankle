generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model University {
  id           String                @id @default(uuid())
  name         String
  studentCount Int
  country      String
  createdAt    DateTime              @default(now())
  externalId   String?
  imageUrl     String
  ranking      Int
  updatedAt    DateTime              @updatedAt
  dailyEntries DailyGameUniversity[]
}

model DailyGame {
  id        String                @id @default(uuid())
  dateKey   String                @unique
  rankingBy RankingBy
  createdAt DateTime              @default(now())
  entries   DailyGameUniversity[]
  submissions Submission[]

  @@index([dateKey])
}

model DailyGameUniversity {
  id           String     @id @default(uuid())
  dailyGameId  String
  universityId String
  orderIndex   Int
  createdAt    DateTime   @default(now())
  dailyGame    DailyGame  @relation(fields: [dailyGameId], references: [id], onDelete: Cascade)
  university   University @relation(fields: [universityId], references: [id], onDelete: Cascade)

  @@unique([dailyGameId, universityId])
  @@index([dailyGameId, orderIndex])
}

enum RankingBy {
  RANKING
  STUDENT_COUNT
}


model Submission {
  id           String   @id @default(uuid())
  dailyGameId  String
  userId       String
  score        Int
  finalOrder   Json?    // e.g., ["uuid1", "uuid2", ...]
  createdAt    DateTime @default(now())

  dailyGame    DailyGame @relation(fields: [dailyGameId], references: [id], onDelete: Cascade)

  @@unique([dailyGameId, userId])
  @@index([dailyGameId])
}
